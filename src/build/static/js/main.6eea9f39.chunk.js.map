{"version":3,"sources":["pages/HomePage.js","components/BackToHomeButton.js","pages/AboutPage.js","pages/NotFoundPage.js","pages/ProducePage.js","pages/BotPage.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","className","to","class","BackToHomeButton","AboutPage","href","target","NotFoundPage","ProducePage","useState","file","setFile","display","setDisplay","result","setResult","models","setModels","useEffect","a","tf","loadImage","profileImg","myImage","Image","crossOrigin","src","Promise","resolve","reject","onload","onerror","makePrediction","example","fromPixels","expandDims","scaleFactor","div","prediction","predict","maxProb","argMax","predictedFruitFromAll","dataSync","predictedFruitOfThree","print","predictedFreshness","type","onChange","event","files","onClick","preventDefault","formData","FormData","append","axios","post","then","res","data","userCreated","alt","console","log","Navbar","id","App","path","component","exact","BotPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eea9f39.chunk.js","sourcesContent":["import React from 'react'\nimport {Button} from 'semantic-ui-react'\nimport {Link} from \"react-router-dom\"\n\nfunction HomePage() {\n    return (\n        <>\n        <div className=\"body\">\n            <div className=\"home\">\n                <h1>how's your</h1>\n                <h1>produce?</h1>\n                <br/>\n                <p>let us judge how ugly your produce is.</p>\n                <br/>\n                <Link to=\"/app\">\n                    <button class=\"main-button\">\n                        <p>try it</p>\n                    </button>\n                </Link>\n                <br/>\n                {/* <Link to=\"/about\">\n                    <Button className=\"about-button\">\n                        <p>about us</p>\n                    </Button>\n                </Link> */}\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default HomePage","import React from 'react'\n//import {Button} from 'semantic-ui-react'\nimport Button from 'react-bootstrap/Button'\nimport {Link} from \"react-router-dom\"\n\nfunction BackToHomeButton() {\n    return (\n        <>\n        <Link to=\"/\">\n            <button className=\"back-to-home\">\n                <p>back to home</p>\n            </button>\n        </Link>\n        </>\n    )\n}\n\nexport default BackToHomeButton","import React from 'react'\nimport {Link} from \"react-router-dom\"\nimport BackToHomeButton from '../components/BackToHomeButton'\n\nfunction AboutPage() {\n    return (\n        <>\n        <div className=\"body\">\n            <div className=\"about\">\n                <h1>about the project</h1>\n                <br/>\n                <p>\n                    peach 'n cabbage started as a fun passion project for\n                    CMU students Katie Shaw and Michelle Zhu. it's composed of \n                    two parts: the app, an application that identifies your produce \n                    and tells you if it's rotten, and the bot, a Twitter bot that \n                    periodically posts photos of fruit. this is filler text lalala\n                </p>\n                <br/>\n                <p>\n                    languages/programs used: CSS, React, Node.js, Express, \n                    Tensorflow, Python\n                </p>\n                <br/>\n                <p>\n                    to see our github repository, <a href=\"http://google.com\" target=\"_blank\">click here</a>\n                </p>\n            </div>\n                <p>contact form</p>\n                <BackToHomeButton/>\n        </div>\n        </>\n    )\n}\n\nexport default AboutPage","import React from 'react'\nimport BackToHomeButton from '../components/BackToHomeButton'\n\nfunction NotFoundPage() {\n    return (\n        <>\n        <div className=\"body\">\n            <h1>why tf you here go find some cabbages</h1>\n            <p>you a poo</p>\n            <BackToHomeButton/>\n        </div>\n        </>\n    )\n}\n\nexport default NotFoundPage","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport BackToHomeButton from '../components/BackToHomeButton'\nimport * as tf from '@tensorflow/tfjs'\n\nfunction ProducePage() {\n    const [file, setFile] = useState(\"\")\n    const [display,setDisplay] = useState(\"\")\n    const [result, setResult] = useState(\"\")\n    const [models, setModels] = useState({})\n    \n    useEffect(async () => {\n        setModels({\n            \"model\": await tf.loadLayersModel('http://localhost:8000/public/models/model/model.json'),\n            \"aboModel\": await tf.loadLayersModel('http://localhost:8000/public/models/aboModel/model.json'),\n            \"apple\": await tf.loadLayersModel('http://localhost:8000/public/models/applesModel/model.json'),\n            \"banana\": await tf.loadLayersModel('http://localhost:8000/public/models/bananasModel/model.json'),\n            \"orange\": await tf.loadLayersModel('http://localhost:8000/public/models/orangesModel/model.json'),\n        })\n    },[])\n\n    const onFileChange = event => {\n      setFile(event.target.files[0])\n    }\n\n    const loadImage = async profileImg => {\n        var myImage = new Image(100,100);\n        myImage.crossOrigin = \"anonymous\"\n        myImage.src = profileImg;\n        return new Promise((resolve, reject) => {\n            myImage.onload = () => resolve(myImage);\n            myImage.onerror = reject;\n        });\n    }\n\n    const makePrediction = (myImage) => {\n        var example = tf.browser.fromPixels(myImage)  // for example\n        example = example.expandDims()\n        tf.stack([example])\n        const scaleFactor = tf.scalar(255);\n        example = example.div(scaleFactor)\n        \n        \n        // order of these matters(for indexing purposes)\n        const allFruits = ['Apple Braeburn', 'Apple Crimson Snow', 'Apple Golden 1', 'Apple Golden 2', 'Apple Golden 3', 'Apple Granny Smith', 'Apple Pink Lady', 'Apple Red 1', 'Apple Red 2', 'Apple Red 3', 'Apple Red Delicious', 'Apple Red Yellow 1', 'Apple Red Yellow 2', 'Apricot', 'Avocado', 'Avocado ripe', 'Banana', 'Banana Lady Finger', 'Banana Red', 'Beetroot', 'Blueberry', 'Cactus fruit', 'Cantaloupe 1', 'Cantaloupe 2', 'Carambula', 'Cauliflower', 'Cherry 1', 'Cherry 2', 'Cherry Rainier', 'Cherry Wax Black', 'Cherry Wax Red', 'Cherry Wax Yellow', 'Chestnut', 'Clementine', 'Cocos', 'Corn', 'Corn Husk', 'Cucumber Ripe', 'Cucumber Ripe 2', 'Dates', 'Eggplant', 'Fig', 'Ginger Root', 'Granadilla', 'Grape Blue', 'Grape Pink', 'Grape White', 'Grape White 2', 'Grape White 3', 'Grape White 4', 'Grapefruit Pink', 'Grapefruit White', 'Guava', 'Hazelnut', 'Huckleberry', 'Kaki', 'Kiwi', 'Kohlrabi', 'Kumquats', 'Lemon', 'Lemon Meyer', 'Limes', 'Lychee', 'Mandarine', 'Mango', 'Mango Red', 'Mangostan', 'Maracuja', 'Melon Piel de Sapo', 'Mulberry', 'Nectarine', 'Nectarine Flat', 'Nut Forest', 'Nut Pecan', 'Onion Red', 'Onion Red Peeled', 'Onion White', 'Orange', 'Papaya', 'Passion Fruit', 'Peach', 'Peach 2', 'Peach Flat', 'Pear', 'Pear 2', 'Pear Abate', 'Pear Forelle', 'Pear Kaiser', 'Pear Monster', 'Pear Red', 'Pear Stone', 'Pear Williams', 'Pepino', 'Pepper Green', 'Pepper Orange', 'Pepper Red', 'Pepper Yellow', 'Physalis', 'Physalis with Husk', 'Pineapple', 'Pineapple Mini', 'Pitahaya Red', 'Plum', 'Plum 2', 'Plum 3', 'Pomegranate', 'Pomelo Sweetie', 'Potato Red', 'Potato Red Washed', 'Potato Sweet', 'Potato White', 'Quince', 'Rambutan', 'Raspberry', 'Redcurrant', 'Salak', 'Strawberry', 'Strawberry Wedge', 'Tamarillo', 'Tangelo', 'Tomato 1', 'Tomato 2', 'Tomato 3', 'Tomato 4', 'Tomato Cherry Red', 'Tomato Heart', 'Tomato Maroon', 'Tomato Yellow', 'Tomato not Ripened', 'Walnut', 'Watermelon']\n        const threeFruits = [\"apple\",\"banana\",\"orange\"]\n        \n        // normal predict\n        var prediction = models[\"model\"].predict(example);\n        var maxProb = prediction.argMax(1);\n        maxProb = maxProb.dataSync()[0];\n        const predictedFruitFromAll = allFruits[maxProb]\n\n        prediction = models[\"aboModel\"].predict(example)\n        //console.log(\"fruit:\")\n        //prediction.print()\n        maxProb = prediction.argMax(1)\n        maxProb = maxProb.dataSync()[0];\n        //console.log(maxProb)\n        const predictedFruitOfThree = threeFruits[maxProb]\n\n        // print(predictedFruit, actual)\n        const model = models[predictedFruitOfThree]\n        prediction = model.predict(example)\n        //console.log(\"freshness:\")\n        prediction.print()\n        prediction = prediction.dataSync()[0];\n        //console.log(prediction)\n        const predictedFreshness = prediction > 0.5 ? 'rotten' : 'fresh'\n        \n        setResult(`all: ${predictedFruitFromAll}, three: ${predictedFruitOfThree}, fresh: ${predictedFreshness}`)\n    }\n\n    const onSubmit = event => {\n        event.preventDefault()\n        const formData = new FormData()\n        formData.append('profileImg', file)\n        \n        axios.post(\"/api/user-profile\", formData, {\n        }).then(async res => {\n            const {profileImg} = res.data.userCreated\n            setDisplay(<img src={profileImg} alt='image should show here'/>)\n\n            //const model = await tf.loadLayersModel('http://localhost:8000/public/models/model/model.json');\n            //model.summary()\n\n            await loadImage(profileImg)\n            .then(\n                myImage => {makePrediction(myImage)},\n                myImage => {console.log(`failed at ${myImage}`)}\n            )\n        })\n    }\n\n\n    return (\n        <>\n        <div className=\"body\">\n            <div className=\"actualapp\">\n                <h1>the app</h1>\n                <br/>\n                <p>\n                    upload an image of your produce. we'll identify the produce \n                    type and tell you how rotten it is. warning: giving us your \n                    image gives permission to post it on twitter!!!\n                </p>\n                <input type=\"file\" onChange={onFileChange}/>\n                <label>click to upload image of your produce</label>\n                <br/><br/>\n                <button onClick={onSubmit}>click to evaluate your produce</button>\n                <br/><br/>\n                {display !== \"\" && display}\n                <br/>\n                {result !== \"\" && <p> Our prediction is: {result} </p>}\n                </div>\n                <BackToHomeButton/>\n        </div>\n        </>\n    )\n}\n\nexport default ProducePage","import React from 'react'\nimport {Link} from \"react-router-dom\"\nimport BackToHomeButton from '../components/BackToHomeButton'\n\nfunction AboutPage() {\n    return (\n        <>\n        <div className=\"body\">\n            <div className=\"bot\">\n                <h1>say hi to our bot</h1>\n                <br/>\n                <p>\n                    want an ugly produce twitter bot? you have come to the right place.\n                </p>\n                <br />\n                <p>\n                    sarcastic filler text about our WONDERFUL TWITTER BOT \n                    with a link to it <a href=\"http://google.com\" target=\"_blank\">right here</a>\n                </p>\n            </div>\n            <BackToHomeButton/>\n        </div>\n        </>\n    )\n}\n\nexport default AboutPage","import React from \"react\"\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n    return(\n        <nav>\n            <img src=\"http://localhost:8000/public/frontEndImages/logo.png\" alt=\"peach\" id=\"logo\"/>\n            <ul>\n                <li>\n                    <Link to=\"/\">home</Link>\n                </li>\n                <li>\n                    <Link to=\"/about\">about</Link>\n                </li>\n                <li>\n                    <Link to=\"/app\">the app</Link>\n                </li>\n                <li>\n                    <Link to=\"/bot\">the bot</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar","import './App.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport HomePage from \"./pages/HomePage\"\nimport AboutPage from \"./pages/AboutPage\"\nimport NotFoundPage from \"./pages/NotFoundPage\"\nimport ProducePage from \"./pages/ProducePage\"\nimport BotPage from \"./pages/BotPage\"\nimport Navbar from \"./components/Navbar\"\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path='/' component={HomePage} exact/>\n          <Route path='/about' component={AboutPage}/>\n          <Route path='/app' component={ProducePage}/>\n          <Route path='/bot' component={BotPage}/>\n          <Route component={NotFoundPage}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}